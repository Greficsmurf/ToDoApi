// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestApi.Models;

namespace RestApi.Migrations
{
    [DbContext(typeof(ToDoContext))]
    partial class ToDoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:HiLoSequenceName", "HiLoSequence")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SequenceHiLo)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.HiLoSequence", "'HiLoSequence', '', '1', '10', '', '', 'Int64', 'False'");

            modelBuilder.Entity("RestApi.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1L,
                            Description = "Goal which require fast resolvement",
                            Name = "Hight priority"
                        },
                        new
                        {
                            CategoryId = 2L,
                            Description = "Goal which can be done later",
                            Name = "Medium priority"
                        },
                        new
                        {
                            CategoryId = 3L,
                            Description = "Optional Goal",
                            Name = "Low priority"
                        });
                });

            modelBuilder.Entity("RestApi.Models.Goal", b =>
                {
                    b.Property<long>("TaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CategoryId");

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EndDate");

                    b.Property<byte[]>("File");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Status")
                        .HasMaxLength(250);

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Goal");
                });

            modelBuilder.Entity("RestApi.Models.Goal", b =>
                {
                    b.HasOne("RestApi.Models.Category")
                        .WithMany("Goal")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
